name: Continuous Integration

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PYTHON_DEFAULT_VERSION: "3.12"
  SKIP_COVERAGE_PYTHON_VERSION_PREFIX: "pypy"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: codespell-project/actions-codespell@2391250ab05295bddd51e36a8c6295edb6343b0e
        with:
          ignore_words_list: datas re-use
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Run linters
        run: nox -vs lint
      - name: Validate new changelog entries
        if: (contains(github.event.pull_request.labels.*.name, '-changelog') == false) && (github.event.pull_request.base.ref != '')
        run: if [ -z "$(git diff --diff-filter=A --name-only origin/${{ github.event.pull_request.base.ref }} changelog.d)" ];
          then echo no changelog item added; exit 1; fi
  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Build the distribution
        run: nox -vs build
  cleanup_buckets:
    needs: lint
    env:
      B2_TEST_APPLICATION_KEY: ${{ secrets.B2_TEST_APPLICATION_KEY }}
      B2_TEST_APPLICATION_KEY_ID: ${{ secrets.B2_TEST_APPLICATION_KEY_ID }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}  # TODO: skip this whole job instead
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}  # TODO: skip this whole job instead
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install dependencies
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}  # TODO: skip this whole job instead
        run: python -m pip install --upgrade nox pip setuptools
      - name: Find and remove old buckets
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}  # TODO: skip this whole job instead
        run: nox -vs cleanup_old_buckets
  test:
    needs: cleanup_buckets
    env:
      B2_TEST_APPLICATION_KEY: ${{ secrets.B2_TEST_APPLICATION_KEY }}
      B2_TEST_APPLICATION_KEY_ID: ${{ secrets.B2_TEST_APPLICATION_KEY_ID }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "pypy-3.9", "pypy-3.10"]
        exclude:
          - os: "macos-latest"
            python-version: "pypy-3.9"
          - os: "ubuntu-latest"
            python-version: "pypy-3.9"
          - os: "macos-latest"
            python-version: "pypy-3.10"
          - os: "windows-latest"
            python-version: "pypy-3.10"
          # TODO: 3.12 setlocale(...) is broken on Windows & Mac
          - os: "macos-latest"
            python-version: "3.12"
          - os: "windows-latest"
            python-version: "3.12"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: python -m pip install --upgrade nox pip setuptools
      - name: Run unit tests
        run: nox -vs unit
        env:
          SKIP_COVERAGE: ${{ startsWith(matrix.python-version, env.SKIP_COVERAGE_PYTHON_VERSION_PREFIX) }}
      - name: Run integration tests
        if: ${{ env.B2_TEST_APPLICATION_KEY != '' && env.B2_TEST_APPLICATION_KEY_ID != '' }}
        run: nox -vs integration -- --dont-cleanup-old-buckets
  doc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_DEFAULT_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: "pip"
      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update -y
          sudo apt-get install -y graphviz plantuml
          python -m pip install --upgrade nox pip setuptools
      - name: Build the docs
        run: nox --non-interactive -vs doc
